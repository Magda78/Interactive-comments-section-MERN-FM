{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dataSlice = createSlice({\n  name: 'data',\n  initialState: {\n    overlay: false\n  },\n  reducers: {\n    toggleOverlay: (state, action) => {\n      console.log('from redux', state, action);\n      state.overlay = action.payload;\n    }\n    //addItem: (state, action) => {\n    //\tconst newItem = { id: uuid(), date: state.date, title: action.payload.toUpperCase() };\n    //\tstate.list.push(newItem);\n    //\tstate.filtered.push(newItem);\n    //\tlocalStorage.setItem('list', JSON.stringify(state.list));\n    //},\n    //filteredList: (state, action) => {\n    //\tstate.filtered = state.list.filter((item) => {\n    //\t\treturn (\n    //\t\t\tnew Date(item.date).toLocaleDateString('en-GB') ===\n    //\t\t\tnew Date(action.payload).toLocaleDateString('en-GB')\n    //\t\t);\n    //\t});\n    ///\t},\n    //removeItem: (state, action) => {\n    //\tstate.list = state.list.filter((item) => item.id !== action.payload);\n    //\tstate.filtered = state.filtered.filter((item) => item.id !== action.payload);\n    //\tlocalStorage.setItem('list', JSON.stringify(state.list));\n    //},\n    //editItem: (state, action) => {\n    //\tconst find = state.list.find(\n    //\t\t(item) => (\n    //\t\t\titem.id === action.payload.id ? (item.title = action.payload.title) : null,\n    //\t\t\tlocalStorage.setItem('list', JSON.stringify(state.list))\n    //\t\t)\n    //\t);\n    //\tconst findFiltered = state.filtered.find(\n    //\t\t(item) => (item.id === action.payload.id ? (item.title = action.payload.title) : null)\n    //\t);\n    //}\n  }\n});\n\nexport const {\n  toggleOverlay\n} = dataSlice.actions;\n\n//export const selectDate = (state) => state.date.date;\n//export const selectList = (state) => state.date.list;\n//export const selectFiltered = (state) => state.date.filtered;\n\nexport default dataSlice.reducer;","map":{"version":3,"names":["createSlice","dataSlice","name","initialState","overlay","reducers","toggleOverlay","state","action","console","log","payload","actions","reducer"],"sources":["/Users/magdalenacbaran/Desktop/Frontend-mentor/Interactive comments section/solution-o/frontend/comments/src/features/dataSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const dataSlice = createSlice({\n\tname: 'data',\n\tinitialState: {\n\t\toverlay: false\n\t},\n\treducers: {\n\t\ttoggleOverlay: (state, action) => {\n\t\t\tconsole.log('from redux', state, action)\n\t\t\tstate.overlay = action.payload;\n\t\t},\n\t\t//addItem: (state, action) => {\n\t\t//\tconst newItem = { id: uuid(), date: state.date, title: action.payload.toUpperCase() };\n\t\t//\tstate.list.push(newItem);\n\t\t//\tstate.filtered.push(newItem);\n\t\t//\tlocalStorage.setItem('list', JSON.stringify(state.list));\n\t\t//},\n\t\t//filteredList: (state, action) => {\n\t\t//\tstate.filtered = state.list.filter((item) => {\n\t\t//\t\treturn (\n\t\t//\t\t\tnew Date(item.date).toLocaleDateString('en-GB') ===\n\t\t//\t\t\tnew Date(action.payload).toLocaleDateString('en-GB')\n\t\t//\t\t);\n\t\t//\t});\n\t///\t},\n\t\t//removeItem: (state, action) => {\n\t\t//\tstate.list = state.list.filter((item) => item.id !== action.payload);\n\t\t//\tstate.filtered = state.filtered.filter((item) => item.id !== action.payload);\n\t\t//\tlocalStorage.setItem('list', JSON.stringify(state.list));\n\t\t//},\n\t\t//editItem: (state, action) => {\n\t\t//\tconst find = state.list.find(\n\t\t//\t\t(item) => (\n\t\t//\t\t\titem.id === action.payload.id ? (item.title = action.payload.title) : null,\n\t\t//\t\t\tlocalStorage.setItem('list', JSON.stringify(state.list))\n\t\t//\t\t)\n\t\t//\t);\n\t\t//\tconst findFiltered = state.filtered.find(\n\t\t//\t\t(item) => (item.id === action.payload.id ? (item.title = action.payload.title) : null)\n\t\t//\t);\n\t\t//}\n\t}\n});\n\nexport const { toggleOverlay } = dataSlice.actions;\n\n//export const selectDate = (state) => state.date.date;\n//export const selectList = (state) => state.date.list;\n//export const selectFiltered = (state) => state.date.filtered;\n\nexport default dataSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACbC,OAAO,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACTC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,KAAK,EAAEC,MAAM,CAAC;MACxCD,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACG,OAAO;IAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACD;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;AACD,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEL;AAAc,CAAC,GAAGL,SAAS,CAACW,OAAO;;AAElD;AACA;AACA;;AAEA,eAAeX,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}