{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\nconst initialList = localStorage.getItem('list') ? JSON.parse(localStorage.getItem('list')) : [];\nconst initialFilteredList = initialList.filter(item => {\n  return new Date(item.date).toLocaleDateString('en-GB') === new Date().toLocaleDateString('en-GB');\n});\nexport const dateSlice = createSlice({\n  name: 'date',\n  initialState: {\n    date: new Date(),\n    list: initialList,\n    filtered: initialFilteredList,\n    afterRemove: [],\n    editoo: []\n  },\n  reducers: {\n    changeDate: (state, action) => {\n      state.date = action.payload;\n    },\n    addItem: (state, action) => {\n      const newItem = {\n        id: uuid(),\n        date: state.date,\n        title: action.payload.toUpperCase()\n      };\n      state.list.push(newItem);\n      state.filtered.push(newItem);\n      localStorage.setItem('list', JSON.stringify(state.list));\n    },\n    filteredList: (state, action) => {\n      state.filtered = state.list.filter(item => {\n        return new Date(item.date).toLocaleDateString('en-GB') === new Date(action.payload).toLocaleDateString('en-GB');\n      });\n    },\n    removeItem: (state, action) => {\n      state.list = state.list.filter(item => item.id !== action.payload);\n      state.filtered = state.filtered.filter(item => item.id !== action.payload);\n      localStorage.setItem('list', JSON.stringify(state.list));\n    },\n    editItem: (state, action) => {\n      const find = state.list.find(item => (item.id === action.payload.id ? item.title = action.payload.title : null, localStorage.setItem('list', JSON.stringify(state.list))));\n      const findFiltered = state.filtered.find(item => item.id === action.payload.id ? item.title = action.payload.title : null);\n    }\n  }\n});\nexport const {\n  changeDate,\n  addItem,\n  filteredList,\n  removeItem,\n  editItem\n} = dateSlice.actions;\nexport const selectDate = state => state.date.date;\nexport const selectList = state => state.date.list;\nexport const selectFiltered = state => state.date.filtered;\nexport default dateSlice.reducer;","map":{"version":3,"names":["createSlice","v4","uuid","initialList","localStorage","getItem","JSON","parse","initialFilteredList","filter","item","Date","date","toLocaleDateString","dateSlice","name","initialState","list","filtered","afterRemove","editoo","reducers","changeDate","state","action","payload","addItem","newItem","id","title","toUpperCase","push","setItem","stringify","filteredList","removeItem","editItem","find","findFiltered","actions","selectDate","selectList","selectFiltered","reducer"],"sources":["/Users/magdalenacbaran/Desktop/Frontend-mentor/Interactive comments section/solution-o/frontend/comments/src/features/dataSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nconst initialList = localStorage.getItem('list') ? JSON.parse(localStorage.getItem('list')) : [];\n\nconst initialFilteredList = initialList.filter((item) => {\n\treturn new Date(item.date).toLocaleDateString('en-GB') === new Date().toLocaleDateString('en-GB');\n});\n\nexport const dateSlice = createSlice({\n\tname: 'date',\n\tinitialState: {\n\t\tdate: new Date(),\n\t\tlist: initialList,\n\t\tfiltered: initialFilteredList,\n\t\tafterRemove: [],\n\t\teditoo: []\n\t},\n\treducers: {\n\t\tchangeDate: (state, action) => {\n\t\t\tstate.date = action.payload;\n\t\t},\n\t\taddItem: (state, action) => {\n\t\t\tconst newItem = { id: uuid(), date: state.date, title: action.payload.toUpperCase() };\n\t\t\tstate.list.push(newItem);\n\t\t\tstate.filtered.push(newItem);\n\t\t\tlocalStorage.setItem('list', JSON.stringify(state.list));\n\t\t},\n\t\tfilteredList: (state, action) => {\n\t\t\tstate.filtered = state.list.filter((item) => {\n\t\t\t\treturn (\n\t\t\t\t\tnew Date(item.date).toLocaleDateString('en-GB') ===\n\t\t\t\t\tnew Date(action.payload).toLocaleDateString('en-GB')\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\t\tremoveItem: (state, action) => {\n\t\t\tstate.list = state.list.filter((item) => item.id !== action.payload);\n\t\t\tstate.filtered = state.filtered.filter((item) => item.id !== action.payload);\n\t\t\tlocalStorage.setItem('list', JSON.stringify(state.list));\n\t\t},\n\t\teditItem: (state, action) => {\n\t\t\tconst find = state.list.find(\n\t\t\t\t(item) => (\n\t\t\t\t\titem.id === action.payload.id ? (item.title = action.payload.title) : null,\n\t\t\t\t\tlocalStorage.setItem('list', JSON.stringify(state.list))\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst findFiltered = state.filtered.find(\n\t\t\t\t(item) => (item.id === action.payload.id ? (item.title = action.payload.title) : null)\n\t\t\t);\n\t\t}\n\t}\n});\n\nexport const { changeDate, addItem, filteredList, removeItem, editItem } = dateSlice.actions;\n\nexport const selectDate = (state) => state.date.date;\nexport const selectList = (state) => state.date.list;\nexport const selectFiltered = (state) => state.date.filtered;\n\nexport default dateSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}