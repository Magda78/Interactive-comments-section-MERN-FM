{"ast":null,"code":"var _jsxFileName = \"/Users/magdalenacbaran/Desktop/Frontend-mentor/Interactive comments section/solution-o/frontend/comments/src/components/send-comment.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendComment(_ref) {\n  _s();\n  let {\n    buttonText,\n    idComment,\n    replyingTo,\n    png\n  } = _ref;\n  const [comment, setComment] = useState('Add comment...');\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const defaultUsername = 'juliusomo';\n  const textAreaHandler = () => {\n    setComment('');\n  };\n  const textAreaUserInputHandler = e => {\n    setComment(e.target.value);\n  };\n  const commentSubmitHandler = async e => {\n    if (buttonText === 'SEND' && comment.length > 0 && comment !== 'Add comment...') {\n      try {\n        const response = await fetch('http://localhost:3001/comments', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            content: comment,\n            username: defaultUsername,\n            png: '../images/avatars/image-juliusomo.png',\n            webp: '../images/avatars/image-juliusomo.webp'\n          })\n        });\n        const responseData = await response.json();\n        setData(responseData);\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n      } catch (err) {\n        setError(err.message || 'Something went wrong');\n        console.log(err);\n      }\n      console.log('data============================', data);\n      //setIds(() => ids + 1);\n    }\n\n    if (buttonText === 'Reply' && comment.length > 0 && comment != 'Add comment...') {\n      //console.log('id comment', idComment);\n      //console.log('commentReplie', comment);\n      //console.log('replyingTo', replyingTo);\n      //console.log('username', defaultUsername)\n      try {\n        const response = await fetch(`http://localhost:3001/comments/${idComment}/replies`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            content: comment,\n            replyingTo: replyingTo,\n            username: defaultUsername,\n            png: '../images/avatars/image-juliusomo.png',\n            webp: '../images/avatars/image-juliusomo.webp'\n          })\n        });\n        const responseData = await response.json();\n        //const newData = data.map(comment => {\n        //\tif(comment.id === idComment) {\n        //\t\treturn {\n        //\t\t\t...comment,\n        //\t\t\treplies: [...comment.replies, responseData]\n        //\t\t}\n        //\t}\n        //\telse {\n        //\t\treturn comment\n        //\t}\n\n        //})\n        //setData(newData)\n        //console.log(\"response\",responseData);\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n      } catch (err) {\n        setError(err.message || 'Something went wrong');\n        console.log(err);\n      }\n    }\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 flex flex-col bg-component-background rounded-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onClick: textAreaHandler,\n        onChange: textAreaUserInputHandler,\n        value: comment,\n        className: \"focus:outline-none border-[1px] pt-3 pl-6 h-24 mb-3.5 text-base font-normal text-grayish-blue leading-6 border-light-gray rounded-md w-[100%] resize-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8 rounded-full\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../images/avatars/image-juliusomo.png\",\n            alt: \"user-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: commentSubmitHandler,\n          className: \"text-base text-white  leading-6 uppercase rounded-md bg-moderate-blue pt-3 pl-[30px] pr-[30px] pb-3 hover:bg-light-grayish-blue\",\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }, this);\n}\n_s(SendComment, \"AdSEpSVsTUbeNQuHFg5MgQc9x/k=\");\n_c = SendComment;\nexport default SendComment;\nvar _c;\n$RefreshReg$(_c, \"SendComment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SendComment","_ref","_s","buttonText","idComment","replyingTo","png","comment","setComment","data","setData","error","setError","defaultUsername","textAreaHandler","textAreaUserInputHandler","e","target","value","commentSubmitHandler","length","response","fetch","method","headers","body","JSON","stringify","content","username","webp","responseData","json","ok","Error","message","err","console","log","preventDefault","className","children","onClick","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","_c","$RefreshReg$"],"sources":["/Users/magdalenacbaran/Desktop/Frontend-mentor/Interactive comments section/solution-o/frontend/comments/src/components/send-comment.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nfunction SendComment({ buttonText, idComment, replyingTo, png }) {\n\tconst [ comment, setComment ] = useState('Add comment...');\n\tconst [ data, setData ] = useState();\n\tconst [ error, setError ] = useState();\n\tconst defaultUsername = 'juliusomo';\n\n\n\n\tconst textAreaHandler = () => {\n\t\tsetComment('');\n\t};\n\tconst textAreaUserInputHandler = (e) => {\n\t\tsetComment(e.target.value);\n\t};\n\tconst commentSubmitHandler = async (e) => {\n\t\t\n\t\tif (buttonText === 'SEND' && comment.length > 0 && comment !== 'Add comment...') {\n\t\t\n\t\t\ttry {\n\t\t\t\tconst response = await fetch('http://localhost:3001/comments', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tcontent: comment,\n\t\t\t\t\t\tusername: defaultUsername,\n\t\t\t\t\t\tpng: '../images/avatars/image-juliusomo.png',\n\t\t\t\t\t\twebp:'../images/avatars/image-juliusomo.webp'\n\t\t\t\t\t})\n\t\t\t\t});\n\n\t\t\t\t\n\t\t\t\tconst responseData = await response.json();\n\t\t\t\tsetData(responseData);\n\t\t\t\t\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(responseData.message);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tsetError(err.message || 'Something went wrong');\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\tconsole.log('data============================', data);\n\t\t\t//setIds(() => ids + 1);\n\t\t}\n\t\tif (buttonText === 'Reply' && comment.length > 0 && comment != 'Add comment...') {\n\t\t\t//console.log('id comment', idComment);\n\t\t\t//console.log('commentReplie', comment);\n\t\t\t//console.log('replyingTo', replyingTo);\n\t\t\t//console.log('username', defaultUsername)\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`http://localhost:3001/comments/${idComment}/replies`, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tcontent: comment,\n\t\t\t\t\t\treplyingTo: replyingTo,\n\t\t\t\t\t\tusername: defaultUsername,\n\t\t\t\t\t\tpng: '../images/avatars/image-juliusomo.png',\n\t\t\t\t\t\twebp:'../images/avatars/image-juliusomo.webp'\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tconst responseData = await response.json();\n\t\t\t\t//const newData = data.map(comment => {\n\t\t\t\t//\tif(comment.id === idComment) {\n\t\t\t\t//\t\treturn {\n\t\t\t\t//\t\t\t...comment,\n\t\t\t\t//\t\t\treplies: [...comment.replies, responseData]\n\t\t\t\t//\t\t}\n\t\t\t\t//\t}\n\t\t\t\t//\telse {\n\t\t\t\t//\t\treturn comment\n\t\t\t\t//\t}\n\n\t\t\t\t//})\n\t\t\t\t//setData(newData)\n\t\t\t\t//console.log(\"response\",responseData);\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(responseData.message);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tsetError(err.message || 'Something went wrong');\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t}\n\t\te.preventDefault();\n\t};\n\n\treturn (\n\t\t<div className=\"p-4 flex flex-col bg-component-background rounded-lg\">\n\t\t\t<form>\n\t\t\t\t<textarea\n\t\t\t\t\tonClick={textAreaHandler}\n\t\t\t\t\tonChange={textAreaUserInputHandler}\n\t\t\t\t\tvalue={comment}\n\t\t\t\t\tclassName=\"focus:outline-none border-[1px] pt-3 pl-6 h-24 mb-3.5 text-base font-normal text-grayish-blue leading-6 border-light-gray rounded-md w-[100%] resize-none\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"flex flex-row justify-between items-center\">\n\t\t\t\t\t<div className=\"w-8 h-8 rounded-full\">\n\t\t\t\t\t\t<img src=\"../images/avatars/image-juliusomo.png\" alt=\"user-avatar\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={commentSubmitHandler}\n\t\t\t\t\t\tclassName=\"text-base text-white  leading-6 uppercase rounded-md bg-moderate-blue pt-3 pl-[30px] pr-[30px] pb-3 hover:bg-light-grayish-blue\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{buttonText}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default SendComment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}